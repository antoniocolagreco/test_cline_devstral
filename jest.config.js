/** @type {import('jest').Config} */
export default {
	preset: 'ts-jest/presets/default-esm',
	testEnvironment: 'node',
	transform: {
		'^.+\\.tsx?$': [
			'ts-jest',
			{
				tsconfig: 'tsconfig.json',
				useESM: true,
			},
		],
	},
	moduleNameMapper: {
		'^@shared-types/(.*)\\.js$': '<rootDir>/src/shared-types/$1',
		'^@enums/(.*)\\.js$': '<rootDir>/src/enums/$1',
		'^@utils/(.*)\\.js$': '<rootDir>/src/utils/$1',
		'^@services/(.*)\\.js$': '<rootDir>/src/services/$1',
		'^@controllers/(.*)\\.js$': '<rootDir>/src/controllers/$1',
		'^@routes/(.*)\\.js$': '<rootDir>/src/routes/$1',
		'^@helpers/(.*)\\.js$': '<rootDir>/src/helpers/$1',
		'^@middlewares/(.*)\\.js$': '<rootDir>/src/middlewares/$1',
		'^@prisma/(.*)\\.js$': '<rootDir>/src/generated/prisma/$1',
		'^@errors/(.*)\\.js$': '<rootDir>/src/errors/$1',
		'^@schemas/(.*)\\.js$': '<rootDir>/src/schemas/$1',
		'^@shared-types/(.*)$': '<rootDir>/src/shared-types/$1',
		'^@enums/(.*)$': '<rootDir>/src/enums/$1',
		'^@utils/(.*)$': '<rootDir>/src/utils/$1',
		'^@services/(.*)$': '<rootDir>/src/services/$1',
		'^@controllers/(.*)$': '<rootDir>/src/controllers/$1',
		'^@routes/(.*)$': '<rootDir>/src/routes/$1',
		'^@helpers/(.*)$': '<rootDir>/src/helpers/$1',
		'^@middlewares/(.*)$': '<rootDir>/src/middlewares/$1',
		'^@prisma/(.*)$': '<rootDir>/src/generated/prisma/$1',
		'^@errors/(.*)$': '<rootDir>/src/errors/$1',
		'^@schemas/(.*)$': '<rootDir>/src/schemas/$1',
		'^@/(.*)$': '<rootDir>/src/$1',
		'^(\\.{1,2}/.*)\\.js$': '$1',
	},
	testMatch: ['**/?(*.)+(spec|test).[tj]s?(x)'],
	collectCoverage: true,
	coverageDirectory: 'coverage',
	roots: ['<rootDir>/tests'],
	setupFilesAfterEnv: ['<rootDir>/tests/global.d.ts'],
	extensionsToTreatAsEsm: ['.ts'],
}
